<Window
    x:Class="Chem4Word.ACME.Controls.AtomPropertyEditor"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ACME="clr-namespace:Chem4Word.ACME"
    xmlns:local="clr-namespace:Chem4Word.ACME.Controls"
    xmlns:dvm="clr-namespace:Chem4Word.ACME.Controls.DesignTimeModels"
    xmlns:conv="clr-namespace:Chem4Word.ACME.Converters"
    xmlns:enums="clr-namespace:Chem4Word.Core.Enums;assembly=Chem4Word.Core"
    x:Name="PropertyEditor"
    Title="Atom Properties"
    MinWidth="200"
    d:DataContext="{d:DesignInstance {x:Type dvm:ApeDesigner},
                                     IsDesignTimeCreatable=True}"
    Closing="AtomPropertyEditor_OnClosing"
    ContentRendered="AtomPropertyEditor_OnContentRendered"
    Icon="/Chem4Word.ACME;component/Resources/ms-word-16.ico"
    Loaded="AtomPropertyEditor_OnLoaded"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    SizeToContent="WidthAndHeight"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/ACMEResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <conv:ValueToForegroundColorConverter x:Key="PositiveConverter" />
            <conv:BoolToVisibilityConverter
                x:Key="VisConverter"
                FalseValue="Collapsed"
                TrueValue="Visible" />
            <conv:BoolToVisibilityConverter
                x:Key="InverseVisConverter"
                FalseValue="Visible"
                TrueValue="Collapsed" />
            <conv:NullableEnumToBooleanConverter x:Key="PlacementConverter" />
            <Style x:Key="PlacementButtonStyle" TargetType="ToggleButton">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontWeight" Value="Regular" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="Padding" Value="0,0,0,0" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="3*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="3*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border
                                    Grid.RowSpan="3"
                                    Grid.ColumnSpan="3"
                                    BorderBrush="DarkOrange"
                                    BorderThickness="2"
                                    Visibility="{TemplateBinding IsChecked,
                                                                 Converter={StaticResource VisConverter}}" />
                                <TextBlock
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    HorizontalAlignment="Center"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Text="{TemplateBinding Content}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Border Margin="3">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="2">
                <!--  Atom Path display  -->
                <TextBlock
                    x:Name="AtomPath"
                    Margin="5"
                    HorizontalAlignment="Left"
                    Visibility="Collapsed"
                    Foreground="Black"><Run Text="Atom Path" /></TextBlock>

                <!--  Element or Functional Group selector  -->
                <StackPanel Orientation="Horizontal">
                    <RadioButton
                        x:Name="Element"
                        Click="Element_OnClick"
                        IsChecked="{Binding IsElement, Mode=TwoWay}"
                        Style="{StaticResource StandardRadioButton}">
                        <TextBlock Style="{StaticResource RadioButtonTextBlock}">Element</TextBlock>
                    </RadioButton>
                    <RadioButton
                        x:Name="FunctionalGroup"
                        Click="FunctionalGroup_OnClick"
                        IsChecked="{Binding IsFunctionalGroup, Mode=TwoWay}"
                        Style="{StaticResource StandardRadioButton}">
                        <TextBlock Style="{StaticResource RadioButtonTextBlock}">Functional Group</TextBlock>
                    </RadioButton>
                </StackPanel>
            </StackPanel>

            <!--  Stack Panel to hold Element / Functional Group controls  -->
            <StackPanel Grid.Row="1" Grid.Column="0">
                <!--  Properties of an Element  -->
                <StackPanel Visibility="{Binding IsChecked, Converter={StaticResource VisConverter}, ElementName=Element}">
                    <!-- <StackPanel Visibility="Visible">-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Grid.Row="1"
                                Grid.Column="0"
                                Style="{StaticResource LabelTextBlock}"><Run Text="Symbol" /></TextBlock>
                            <Grid
                                Grid.Row="1"
                                Grid.Column="1"
                                Margin="0">
                                <Grid.Resources>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsExpanded, ElementName=PeriodicTableExpander}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsExpanded, ElementName=PeriodicTableExpander}" Value="False">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ComboBox
                                    x:Name="AtomPicker"
                                    Width="Auto"
                                    Height="Auto"
                                    MinWidth="50"
                                    MinHeight="25"
                                    Margin="5"
                                    Background="{x:Static SystemColors.WindowBrush}"
                                    FontFamily="Arial"
                                    FontSize="16"
                                    FontWeight="DemiBold"
                                    Foreground="{Binding SelectedItem.Foreground, RelativeSource={RelativeSource Self}}"
                                    SelectedValue="{Binding Element}"
                                    SelectedValuePath="Element"
                                    SelectionChanged="AtomPicker_OnSelectionChanged"
                                    ToolTip="Click to choose element" />
                                <Expander
                                    x:Name="PeriodicTableExpander"
                                    Grid.Column="1"
                                    Margin="5"
                                    Foreground="{StaticResource Chem4WordBrush}"
                                    IsExpanded="False"
                                    ToolTip="Click to display Periodic Table">
                                    <local:VisualPeriodicTable
                                        x:Name="AtomTable"
                                        ElementSelected="AtomTable_OnElementSelected"
                                        SelectedElement="{Binding SelectedElement}" />
                                </Expander>
                                <CheckBox
                                    x:Name="ExplicitCheckBox"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    Click="ExplicitCheckBox_OnClick"
                                    Content="Explicit"
                                    IsChecked="{Binding ExplicitC}"
                                    IsThreeState="True">
                                    <CheckBox.Style>
                                        <Style TargetType="{x:Type CheckBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Setter Property="Margin" Value="5" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Element.Symbol}" Value="C">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ExplicitC}" Value="{x:Null}">
                                                    <Setter Property="ToolTip">
                                                        <Setter.Value>
                                                            <ToolTip Content="Auto: Carbon display is determined automatically." />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ExplicitC}" Value="True">
                                                    <Setter Property="ToolTip">
                                                        <Setter.Value>
                                                            <ToolTip>
                                                                <TextBlock><Run Text="On: Carbon will display as " /><Bold>
                                                                        <Run Text="C" />
                                                                    </Bold></TextBlock>
                                                            </ToolTip>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ExplicitC}" Value="False">
                                                    <Setter Property="ToolTip">
                                                        <Setter.Value>
                                                            <ToolTip>
                                                                <TextBlock><Run Text="Off: Carbon will not display." /></TextBlock>
                                                            </ToolTip>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                            </Grid>
                            <TextBlock
                                Grid.Row="2"
                                Grid.Column="0"
                                Style="{StaticResource LabelTextBlock}"><Run Text="Charge" /></TextBlock>
                            <ComboBox
                                x:Name="ChargeCombo"
                                Grid.Row="2"
                                Grid.Column="1"
                                Width="50"
                                Margin="5"
                                HorizontalAlignment="Left"
                                Foreground="{Binding SelectedValue, Converter={StaticResource PositiveConverter}, ElementName=ChargeCombo}"
                                ItemsSource="{Binding Charges}"
                                SelectedValue="{Binding Charge}"
                                SelectedValuePath="Value"
                                SelectionChanged="ChargeCombo_OnSelectionChanged"
                                Style="{StaticResource StandardCombo}"
                                ToolTip=" Increase or decrease charge">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Foreground="{Binding Value, Converter={StaticResource PositiveConverter}}" Text="{Binding Label}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBlock
                                Grid.Row="3"
                                Grid.Column="0"
                                Margin="5,0,0,7"
                                VerticalAlignment="Bottom"
                                Style="{StaticResource LabelTextBlock}"
                                Visibility="{Binding HasIsotopes, Converter={StaticResource VisConverter}, Mode=OneWay}"><Run Text="Isotope" /></TextBlock>
                            <ComboBox
                                x:Name="IsotopePicker"
                                Grid.Row="3"
                                Grid.Column="1"
                                Width="50"
                                Margin="5,5,0,5"
                                HorizontalAlignment="Left"
                                DisplayMemberPath="Label"
                                FontWeight="Bold"
                                ItemsSource="{Binding IsotopeMasses}"
                                SelectedValue="{Binding Isotope}"
                                SelectedValuePath="Label"
                                SelectionChanged="IsotopePicker_OnSelectionChanged"
                                Style="{StaticResource StandardCombo}"
                                Visibility="{Binding HasIsotopes, Converter={StaticResource VisConverter}, Mode=OneWay}" />
                        </Grid>
                        <Grid
                            Name="HydrogenPlacementGrid"
                            Grid.Row="1"
                            Visibility="{Binding ShowCompass, Converter={StaticResource VisConverter}, Mode=OneWay}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Grid.Row="0"
                                Margin="5,0,0,0"
                                HorizontalAlignment="Stretch"
                                Style="{StaticResource LabelTextBlock}"><Run FontSize="14" Text="Hydrogen Placement" /></TextBlock>
                            <Grid Grid.Row="1" Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35" />
                                    <RowDefinition Height="35" />
                                    <RowDefinition Height="35" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="35" />
                                    <ColumnDefinition Width="35" />
                                    <ColumnDefinition Width="35" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton
                                    Name="AutoButton"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Checked="PlacementButton_OnChecked"
                                    IsChecked="{Binding ExplicitHydrogenPlacement, Converter={StaticResource PlacementConverter}, ConverterParameter={x:Null}}"
                                    Style="{StaticResource PlacementButtonStyle}"
                                    ToolTip="Automatic">
                                    A
                                </ToggleButton>
                                <ToggleButton
                                    Name="NorthButton"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Checked="PlacementButton_OnChecked"
                                    IsChecked="{Binding ExplicitHydrogenPlacement, Converter={StaticResource PlacementConverter}, ConverterParameter={x:Static enums:CompassPoints.North}}"
                                    Style="{StaticResource PlacementButtonStyle}"
                                    ToolTip="North">
                                    N
                                </ToggleButton>
                                <ToggleButton
                                    Name="SouthButton"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Checked="PlacementButton_OnChecked"
                                    IsChecked="{Binding ExplicitHydrogenPlacement, Converter={StaticResource PlacementConverter}, ConverterParameter={x:Static enums:CompassPoints.South}}"
                                    Style="{StaticResource PlacementButtonStyle}"
                                    ToolTip="South">
                                    S
                                </ToggleButton>
                                <ToggleButton
                                    Name="EastButton"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Checked="PlacementButton_OnChecked"
                                    IsChecked="{Binding ExplicitHydrogenPlacement, Converter={StaticResource PlacementConverter}, ConverterParameter={x:Static enums:CompassPoints.East}}"
                                    Style="{StaticResource PlacementButtonStyle}"
                                    ToolTip="East">
                                    E
                                </ToggleButton>
                                <ToggleButton
                                    Name="WestButton"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Checked="PlacementButton_OnChecked"
                                    IsChecked="{Binding ExplicitHydrogenPlacement, Converter={StaticResource PlacementConverter}, ConverterParameter={x:Static enums:CompassPoints.West}}"
                                    Style="{StaticResource PlacementButtonStyle}"
                                    ToolTip="West">
                                    W
                                </ToggleButton>
                            </Grid>
                        </Grid>
                    </Grid>
                </StackPanel>
                <!--  Properties of a Functional Group  -->
                <Grid
                    Width="Auto"
                    Height="Auto"
                    Visibility="{Binding IsChecked, Converter={StaticResource VisConverter}, ElementName=FunctionalGroup}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Padding="0,0" Style="{StaticResource LabelTextBlock}"><Run Text="Group" /></TextBlock>
                    <ComboBox
                        x:Name="FunctionalGroupPicker"
                        Grid.Row="0"
                        Grid.Column="1"
                        Width="Auto"
                        Height="Auto"
                        MinWidth="60"
                        MinHeight="25"
                        Margin="0,5,0,5"
                        Background="{x:Static SystemColors.WindowBrush}"
                        FontFamily="Arial"
                        FontSize="18"
                        FontWeight="DemiBold"
                        Foreground="{Binding SelectedItem.Foreground, RelativeSource={RelativeSource Self}}"
                        SelectedValue="{Binding Element}"
                        SelectedValuePath="Element"
                        SelectionChanged="FunctionalGroupPicker_OnSelectionChanged"
                        ToolTip="Click to choose Functional Group" />
                    <Grid
                        Name="FuncGroupPlacementGrid"
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Height="Auto"
                        Visibility="{Binding ShowCompass, Converter={StaticResource VisConverter}, Mode=OneWay}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Grid.Row="0"
                                Margin="5,5,0,0"
                                Style="{StaticResource LabelTextBlock}"><Run FontSize="14" Text="Group Placement" /></TextBlock>
                            <Grid Grid.Row="1" Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="35" />
                                    <ColumnDefinition Width="35" />
                                    <ColumnDefinition Width="35" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton
                                    Name="FGAutoButton"
                                    Grid.Column="1"
                                    Checked="FGPlacementButton_OnChecked"
                                    IsChecked="{Binding ExplicitFunctionalGroupPlacement, Converter={StaticResource PlacementConverter}, ConverterParameter={x:Null}}"
                                    Style="{StaticResource PlacementButtonStyle}"
                                    ToolTip="Automatic">
                                    A
                                </ToggleButton>
                                <ToggleButton
                                    Name="FGEastButton"
                                    Grid.Column="2"
                                    Checked="FGPlacementButton_OnChecked"
                                    IsChecked="{Binding ExplicitFunctionalGroupPlacement, Converter={StaticResource PlacementConverter}, ConverterParameter={x:Static enums:CompassPoints.East}}"
                                    Style="{StaticResource PlacementButtonStyle}"
                                    ToolTip="East">
                                    E
                                </ToggleButton>
                                <ToggleButton
                                    Name="FGWestButton"
                                    Grid.Column="0"
                                    Checked="FGPlacementButton_OnChecked"
                                    IsChecked="{Binding ExplicitFunctionalGroupPlacement, Converter={StaticResource PlacementConverter}, ConverterParameter={x:Static enums:CompassPoints.West}}"
                                    Style="{StaticResource PlacementButtonStyle}"
                                    ToolTip="West">
                                    W
                                </ToggleButton>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </StackPanel>

            <!--  Preview Pane  -->
            <StackPanel
                Grid.Row="1"
                Grid.Column="1"
                Height="245"
                MaxWidth="245"
                MaxHeight="245"
                Margin="5,5,5,0"
                VerticalAlignment="Top">
                <Border
                    BorderBrush="DarkOrange"
                    BorderThickness="3"
                    CornerRadius="5">
                    <ACME:Display
                        x:Name="Preview"
                        Width="230"
                        Height="230"
                        Margin="3"
                        HighlightActive="False" />
                </Border>
            </StackPanel>

            <!--  Finally the Save and Cancel buttons  -->
            <StackPanel
                Grid.Row="2"
                Grid.Column="1"
                Width="170"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <Button Click="Save_OnClick" Content="OK" />
                <Button Click="Close_OnClick" Content="Cancel" />
            </StackPanel>
        </Grid>
    </Border>
</Window>